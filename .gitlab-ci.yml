image: docker:19.03.12

stages:
  - sonarqube
  - build
  - deploy

services:
  - docker:19.03.13-dind

variables:
  DOCKER_HOST: tcp://docker:2376
  APP_NAME: dev-frontend
  CI_REGISTRY_IMAGE: $APP_NAME
  CD_CHART_REPO: infrastructure
  CD_GIT_REPOSITORY: git@gitlab.foodash.xyz:foodash/$CD_CHART_REPO.git
  CD_MANIFEST_FILE: Chart.yaml
  TAG: $CI_COMMIT_SHORT_SHA
  BRANCH: develop

before_script:
  - docker info
  - echo $CI_REGISTRY_IMAGE:$TAG $PWD
  # login
  - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY_URL

# after_script:
#   - docker image prune -af

build_image:
  stage: build
  script:
    # Docker Build && Push image
    - cat Dockerfile
    - sh setup_env.sh
    - >
      docker build
      --tag $CI_REGISTRY_IMAGE:$TAG
      . 
    - docker tag $CI_REGISTRY_IMAGE:$TAG $CI_REGISTRY_URL/foodash/frontend/$CI_REGISTRY_IMAGE:$TAG
    - docker push $CI_REGISTRY_URL/foodash/frontend/$CI_REGISTRY_IMAGE:$TAG

tag_latest_image:
  stage: deploy
  variables:
    GIT_STRATEGY: none
  script:
    - docker pull $CI_REGISTRY_URL/foodash/frontend/$CI_REGISTRY_IMAGE:$TAG
    - docker tag $CI_REGISTRY_URL/foodash/frontend/$CI_REGISTRY_IMAGE:$TAG $CI_REGISTRY_URL/foodash/frontend/$CI_REGISTRY_IMAGE:latest
    - docker push $CI_REGISTRY_URL/foodash/frontend/$CI_REGISTRY_IMAGE:latest

update_manifest:
  stage: deploy
  variables:
    GIT_STRATEGY: none
  retry: 2
  script:
    # Add SSH key to root
    - mkdir -p /root/.ssh
    - cp $SSH_CONFIG /root/.ssh/config 
    - echo "$SSH_PRIVATE_KEY" > /root/.ssh/id_rsa
    - chmod 600 /root/.ssh/id_rsa
    # Git
    - apk add --no-cache git
    - git config --global user.name $APP_NAME
    - git config --global user.email $APP_NAME"@gitlab.foodash.xyz"
    - git clone --single-branch --branch $BRANCH $CD_GIT_REPOSITORY
    - cd $CD_CHART_REPO/Helms/frontend
    # Helm
    - >
      docker run --rm -v ${PWD}:/workdir mikefarah/yq:3.2.1 yq write 
      --inplace --verbose $CD_MANIFEST_FILE appVersion $TAG
    - cat $CD_MANIFEST_FILE
    - git commit -am "update image tag" && git push origin $BRANCH


sonarqube-check:
  stage: sonarqube
  image:
    name: sonarsource/sonar-scanner-cli:latest
    entrypoint: ['']
  variables:
    SONAR_USER_HOME: '${CI_PROJECT_DIR}/.sonar' # Defines the location of the analysis task cache
    GIT_DEPTH: '0' # Tells git to fetch all the branches of the project, required by the analysis task
  cache:
    key: '${CI_JOB_NAME}'
    paths:
      - .sonar/cache
  script:
    - sonar-scanner
  allow_failure: true
  before_script:
    - []
  # only:
  #   - merge_requests
