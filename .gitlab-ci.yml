image: docker:latest

stages:
  - build
  - deploy

variables:
  APP_NAME: dev-frontend
  CI_REGISTRY_IMAGE: frontend/$APP_NAME
  CD_CHART_REPO: infrastructure
  CD_GIT_REPOSITORY: git@gitlab.foodash.xyz:/$CD_CHART_REPO.git
  CD_MANIFEST_FILE: Chart.yaml
  TAG: $CI_COMMIT_REF_NAME-$CI_COMMIT_SHORT_SHA

before_script:
  - echo $CI_REGISTRY_IMAGE:$TAG $PWD
  # login
  - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD https://registry.foodash.xyz

after_script:
  - docker image prune -af

build_image:
  stage: build
  script:
    # Docker Build && Push image
    - cat Dockerfile
    - >
      docker build
      --tag $CI_REGISTRY_IMAGE:$TAG
      . 

    - docker push $CI_REGISTRY_IMAGE:$TAG

tag_latest_image:
  stage: deploy
  variables:
    GIT_STRATEGY: none
  script:
    - docker pull $CI_REGISTRY_IMAGE:$TAG
    - docker tag $CI_REGISTRY_IMAGE:$TAG $CI_REGISTRY_IMAGE:latest
    - docker push $CI_REGISTRY_IMAGE:latest

# sonarqube-check:
#   image:
#     name: sonarsource/sonar-scanner-cli:latest
#     entrypoint: ['']
#   variables:
#     SONAR_USER_HOME: '${CI_PROJECT_DIR}/.sonar' # Defines the location of the analysis task cache
#     GIT_DEPTH: '0' # Tells git to fetch all the branches of the project, required by the analysis task
#   cache:
#     key: '${CI_JOB_NAME}'
#     paths:
#       - .sonar/cache
#   script:
#     - sonar-scanner
#   allow_failure: true
#   only:
#     - merge_requests
